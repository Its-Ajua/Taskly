openapi: 3.0.0
info:
  title: Taskly API
  description: API for task management
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /auth/login:
    post:
      summary: Login to the application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        401:
          description: Invalid credentials
  /boards:
    post:
      summary: Create a new board
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      responses:
        201:
          description: Board created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
        400:
          description: Invalid request
    get:
      summary: Get all boards
      responses:
        200:
          description: Boards retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
        404:
          description: No boards found
  /tasks/{boardId}:
    post:
      summary: Create a new task
      parameters:
        - in: path
          name: boardId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - description
              properties:
                title:
                  type: string
                description:
                  type: string
      responses:
        201:
          description: Task created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
        400:
          description: Invalid request
    get:
      summary: Get all tasks for a board
      parameters:
        - in: path
          name: boardId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Tasks retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
                    description:
                      type: string
        404:
          description: No tasks found
  /organizations:
    post:
      summary: Create a new organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        201:
          description: Organization created successfully
        400:
          description: Invalid request
    get:
      summary: Get all organizations for the current user
      responses:
        200:
          description: Organizations retrieved successfully
        401:
          description: Unauthorized
  /organizations/{organizationId}/members:
    post:
      summary: Add a new member to an organization
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: body
          name: memberId
          required: true
          schema:
            type: string
      responses:
        201:
          description: Member added successfully
        400:
          description: Invalid request
  /comments:
    post:
      summary: Create a new comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - text
                - taskId
              properties:
                text:
                  type: string
                taskId:
                  type: string
      responses:
        201:
          description: Comment created successfully
        400:
          description: Invalid request
    get:
      summary: Get all comments for a task
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Comments retrieved successfully
        401:
          description: Unauthorized
  /comments/{commentId}:
    put:
      summary: Update a comment
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  type: string
      responses:
        200:
          description: Comment updated successfully
        400:
          description: Invalid request
    delete:
      summary: Delete a comment
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Comment deleted successfully
        401:
          description: Unauthorized
  /notifications:
    post:
      summary: Create a new notification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - text
                - userId
              properties:
                text:
                  type: string
                userId:
                  type: string
      responses:
        201:
          description: Notification created successfully
        400:
          description: Invalid request
    get:
      summary: Get all notifications for a user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Notifications retrieved successfully
        401:
          description: Unauthorized
  /notifications/{notificationId}:
    delete:
      summary: Delete a notification
      parameters:
        - in: path
          name: notificationId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Notification deleted successfully
        401:
          description: Unauthorized        